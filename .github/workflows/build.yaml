name: Build

on:
  push:
    branches:
      - '**'
      - '!main'
  workflow_dispatch:

jobs:
  build:
    name: Build image
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      # Note that poerty command will be used only for exporting deps in this workflow
      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Generate requirements.txt for Google Cloud buildpacks
        run: |
          poetry export -o requirements.txt --without-hashes

      - name: Security Test of Trivy with filesystem-mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './'
          trivy-config: .github/configs/trivy.yaml
          # https://github.com/aquasecurity/trivy-action

      # - name: Install nixpacks CLI and build image
      #   run: |
      #     curl -sSL https://nixpacks.com/install.sh | bash
      #     nixpacks build . --name random-travelers:local

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        # https://github.com/docker/login-action#github-container-registry

      - name: Build and push Docker images
        uses: iloveitaly/github-action-nixpacks@main
        with:
          push: false
          tags: random-travelers:local

      # - name: Sanity Check with /healthz
      #   env:
      #     MYSQL_PASSWORD: root
      #     MYSQL_DATABASE: rt
      #     MYSQL_HOST: 127.0.0.1
      #     MYSQL_USER: root
      #   run: |
      #     make db
      #     docker run -d \
      #       --name random-travelers \
      #       -p 8080:8080 \
      #       -e MYSQL_HOST=${MYSQL_HOST} \
      #       -e MYSQL_USER=${MYSQL_USER} \
      #       -e MYSQL_PASSWORD=${MYSQL_PASSWORD} \
      #       -e MYSQL_DATABASE=${MYSQL_DATABASE} \
      #       ghcr.io/hwakabh/random-travelers:latest
      #     sleep 5
      #     # Need to connect same network as MySQL container
      #     docker logs random-travelers
      #     curl -v -s -X GET localhost:8080/healthz ; echo

